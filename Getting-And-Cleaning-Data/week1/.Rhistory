f1 <- function(x, y) {
x+y
}
f1( 3, 4)
f1 <- function(x, y) {
x+y
}
f1( 3, 4)
1+2
2+4
2
2+4
exit
quit()
}
bye()
source('~/DataScience/datasciencecoursera/week3/mean.R')
makeVector
makeVector()
makeVector((4,5,6))
makeVector(c(4,5,6))
cachemean()
cachemean(list)
a <- makeVector(c(4,5,6))
cachemean(a)
cachemean(a)
source('~/DataScience/datasciencecoursera/week3/mean.R')
a <- makeVector(c(4,5,6,8))
cachemean(a)
cachemean(a)
source('~/DataScience/datasciencecoursera/week3/counter.R')
counter_one <- new_counter()
counter_two <- new_counter()
counter_one()
counter_one()
counter_two()
counter_one()
counter_one()
counter_two()
source('~/DataScience/datasciencecoursera/week3/counter.R')
source('~/DataScience/ProgrammingAssignment2/cachematrix.R')
source('~/DataScience/datasciencecoursera/week3/mean.R')
source('~/DataScience/ProgrammingAssignment2/cachematrix.R')
mat = matrix(c(2, 4, 3, 1, 5, 7), nrow=2, ncol=3, byrow = TRUE)
mat
makeCacheMatrix(mat)
a <- makeCacheMatrix(mat)
a
source('~/DataScience/ProgrammingAssignment2/cachematrix.R')
source('~/DataScience/ProgrammingAssignment2/cachematrix.R')
mat = matrix(c(2, 4, 3, 1, 5, 7), nrow=2, ncol=3, byrow = TRUE)
mat
a <- makeCacheMatrix(mat)
source('~/DataScience/ProgrammingAssignment2/cachematrix.R')
source('~/DataScience/ProgrammingAssignment2/cachematrix.R')
a <- makeCacheMatrix(mat)
a
source('~/DataScience/ProgrammingAssignment2/cachematrix.R')
solve(mat)
mat = matrix(c(2, 4, 3, 1, 5, 7, 3, 5, 7), nrow=3, ncol=3, byrow = TRUE)
mat
solve(mat)
source('~/DataScience/ProgrammingAssignment2/cachematrix.R')
a
cachesolve(mat)
source('~/DataScience/ProgrammingAssignment2/cachematrix.R')
cacheolve(mat)
source('~/DataScience/ProgrammingAssignment2/cachematrix.R')
cacheSolve(mat)
cacheSolve(a)
solve(mat)
cacheSolve(a)
cacheSolve(a)
source('~/DataScience/ProgrammingAssignment2/cachematrix.R')
source('~/DataScience/ProgrammingAssignment2/cachematrix.R')
cacheSolve(a)
View(mat)
View(mat)
source('~/DataScience/ProgrammingAssignment2/cachematrix.R')
source('~/DataScience/ProgrammingAssignment2/cachematrix.R')
source('~/DataScience/ProgrammingAssignment2/cachematrix.R')
mat2 = matrix(c(2, 4, 3, 1, 5, 4, 4, 4, 2), nrow=3, ncol=3, byrow = TRUE)
mat2
makeCacheMatrix(mat2)
b <-makeCacheMatrix(mat2)
cacheSolve(b)
cacheSolve(b)
cacheSolve(b)
b <-makeCacheMatrix(mat)
cacheSolve(b)
cacheSolve(b)
source('~/DataScience/ProgrammingAssignment2/cachematrix.R')
source('~/DataScience/ProgrammingAssignment2/cachematrix.R')
setwd("Question 1
The American Community Survey distributes downloadable data about United States communities. Download the 2006 microdata survey about housing for the state of Idaho using download.file() from here:
https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv
and load the data into R. The code book, describing the variable names is here:
https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FPUMSDataDict06.pdf
How many properties are worth $1,000,000 or more?
164
24
53
31
")
exit
quit()
setwd("/home/sean/DataScience/datasciencecoursera/Getting-And-Cleaning-Data/week1")
?download
??down
read.csv
?read.csv
source('~/DataScience/datasciencecoursera/Getting-And-Cleaning-Data/week1/q1.R')
?download.file
source('~/DataScience/datasciencecoursera/Getting-And-Cleaning-Data/week1/q1.R')
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv","ACS.csv",method="curl")
a <- read.csv("ACS.csv")
a
View(a)
a[Val==24]
a[VAL==24]
a[[VAL==24]]
a[["
VAL"==24]]
a[["VAL"==24]]
subset(a, VAL="24")
nrow(subset(a, VAL="24"))
nrow(subset(a, VAL="22"))
nrow(a)
nrow(subset(a, VAL=24))
nrow(subset(a, VAL==24))
source('~/DataScience/datasciencecoursera/Getting-And-Cleaning-Data/week1/q1.R')
a <- read.csv("ACS.csv")
nrow(subset(a, VAL==24))
source('~/DataScience/datasciencecoursera/Getting-And-Cleaning-Data/week1/q1.R')
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx ","NGAP.csv",method="curl")
a <- read.csv("NGAP.csv")
library(xlsx)
install.packages("xlsx")
library(xlsx)
a <- read.xlsx("NGAP.csv", sheetIndex=1, Header=TRUE)
head(a)
View(a)
?read.xlsx
dat <- read.xlsx("NGAP.csv", sheetIndex=1, Header=TRUE, startRow=18, endRow=23)[7-15]
head(dat)
sum(dat$Zip*dat$Ext,na.rm=T)
?read.xml
install.packages("XML")
install.packages("XML")
library(xml)
library(XML)
?read.XML
?read.xml
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileURL, useIntern=TRUE)
?xmlTreaParse
?xmlTreeParse
fileURL <- "http://www.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileURL, useIntern=TRUE)
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileURL, useIntern=TRUE)
fileURL <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileURL, useIntern=TRUE)
head(doc)
doc
names(rootNode)
rootNode <- xmlRoot(doc)
names(rootNode)
doc <- xmlTreeParse(fileURL, useIntern=TRUE)
rootNode <- xmlRoot(doc)
names(rootNode)
xmlName(rootNode)
rootNode
rootNode[[1]]
xmlValue(rootNode)
xmlSApply(rootNode,xmlValue)
xpathSApply(rootNode,"//zipcode",xmlValue)
zips <- xpathSApply(rootNode,"//zipcode",xmlValue)
zips
table(zips)
